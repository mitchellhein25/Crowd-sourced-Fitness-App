// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AddNewChallenge /> load renders correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "white",
      "flex": 1,
      "justifyContent": "flex-start",
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "marginTop": 50,
      }
    }
  >
    <Text
      style={
        Object {
          "fontSize": 20,
          "fontWeight": "600",
          "textAlign": "center",
        }
      }
    >
      Create a New Public Challenge
    </Text>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "width": "100%",
      }
    }
  >
    <Text
      style={
        Object {
          "fontSize": 15,
          "margin": 0,
          "paddingLeft": 20,
          "textAlign": "left",
          "width": "100%",
        }
      }
    >
      Type:
    </Text>
    <View
      style={
        Object {
          "width": "90%",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "rgba(60, 60, 67, 0.6)",
            "display": "none",
            "fontSize": 12,
            "paddingBottom": 4,
          }
        }
      >
        Label
      </Text>
      <View
        style={
          Object {
            "borderBottomWidth": 1,
            "borderColor": "#ddd",
            "flexDirection": "row",
            "paddingBottom": 8,
            "paddingRight": 20,
            "paddingTop": 6,
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "flexGrow": 1,
              "paddingRight": 20,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 14,
                "left": 14,
                "right": 14,
                "top": 14,
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "rgba(60, 60, 67, 0.3)",
                  "fontSize": 17,
                }
              }
            >
              Select
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          focusable={true}
          hitSlop={
            Object {
              "bottom": 14,
              "left": 14,
              "right": 14,
              "top": 14,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            pointerEvents="none"
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight={9}
              bbWidth={12}
              focusable={false}
              height={9}
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Object {
                    "flex": 0,
                    "height": 9,
                    "width": 12,
                  },
                ]
              }
              vbHeight={9}
              vbWidth={12}
              width={12}
              x={0}
              y={0}
            >
              <RNSVGGroup>
                <RNSVGGroup
                  fill={null}
                  fillRule={0}
                  name="Page-1"
                  propList={
                    Array [
                      "fill",
                      "fillRule",
                      "stroke",
                      "strokeWidth",
                    ]
                  }
                  stroke={null}
                  strokeWidth="1"
                >
                  <RNSVGPath
                    d="M5.625 9 11.25 0 0 0z"
                    fill={4286715730}
                    name="down"
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 15,
            "margin": 0,
            "paddingLeft": 20,
            "textAlign": "left",
            "width": "100%",
          }
        }
      >
        Description:
      </Text>
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "backgroundColor": "white",
            "borderRadius": 5,
            "height": 80,
            "justifyContent": "flex-start",
            "margin": 5,
            "width": "90%",
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          onChangeText={[Function]}
          rejectResponderTermination={true}
          style={
            Object {
              "alignContent": "flex-start",
              "borderRadius": 5,
              "borderWidth": 2,
              "display": "flex",
              "fontSize": 15,
              "height": "100%",
              "padding": 0,
              "textAlign": "left",
              "width": "100%",
            }
          }
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 15,
            "margin": 0,
            "paddingLeft": 20,
            "textAlign": "left",
            "width": "100%",
          }
        }
      >
        Goals (3 goals Max):
      </Text>
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "backgroundColor": "white",
            "borderRadius": 5,
            "flexDirection": "row",
            "height": 40,
            "justifyContent": "center",
            "margin": 5,
            "width": "100%",
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          onChangeText={[Function]}
          rejectResponderTermination={true}
          style={
            Object {
              "borderRadius": 5,
              "borderWidth": 2,
              "display": "flex",
              "fontSize": 15,
              "height": "100%",
              "padding": 0,
              "textAlign": "left",
              "width": "60%",
            }
          }
          underlineColorAndroid="transparent"
          value=""
        />
        <View
          style={
            Object {
              "height": 40,
              "width": "30%",
            }
          }
        >
          <View
            accessibilityLabel="Add goal button"
            accessibilityRole="button"
            accessibilityState={Object {}}
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#007AFF",
                      "fontSize": 18,
                      "margin": 8,
                      "textAlign": "center",
                    },
                    Object {
                      "color": "black",
                    },
                  ]
                }
              >
                Add Goal
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View />
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 15,
            "margin": 0,
            "paddingLeft": 20,
            "textAlign": "left",
            "width": "100%",
          }
        }
      >
        Badges:
      </Text>
      <View
        style={
          Object {
            "width": "90%",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "rgba(60, 60, 67, 0.6)",
              "display": "none",
              "fontSize": 12,
              "paddingBottom": 4,
            }
          }
        >
          Label
        </Text>
        <View
          style={
            Object {
              "borderBottomWidth": 1,
              "borderColor": "#ddd",
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingRight": 20,
              "paddingTop": 6,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "flexGrow": 1,
                "paddingRight": 20,
              }
            }
          >
            <RCTScrollView
              ListEmptyComponent={[Function]}
              data={Array []}
              disableVirtualization={false}
              extraData={
                Object {
                  "inputValue": "",
                  "showOptions": false,
                }
              }
              getItem={[Function]}
              getItemCount={[Function]}
              horizontal={true}
              initialNumToRender={10}
              keyExtractor={[Function]}
              maxToRenderPerBatch={10}
              onContentSizeChange={[Function]}
              onEndReachedThreshold={2}
              onLayout={[Function]}
              onMomentumScrollEnd={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              removeClippedSubviews={false}
              renderItem={[Function]}
              scrollEventThrottle={50}
              stickyHeaderIndices={Array []}
              updateCellsBatchingPeriod={50}
              viewabilityConfigCallbackPairs={Array []}
              windowSize={21}
            >
              <View>
                <View
                  accessible={true}
                  focusable={true}
                  hitSlop={
                    Object {
                      "bottom": 14,
                      "left": 14,
                      "right": 14,
                      "top": 14,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "flexGrow": 1,
                      "opacity": 1,
                      "width": "100%",
                    }
                  }
                >
                  <Text
                    style={
                      Object {
                        "color": "rgba(60, 60, 67, 0.3)",
                        "fontSize": 17,
                      }
                    }
                  >
                    Select
                  </Text>
                </View>
              </View>
            </RCTScrollView>
          </View>
          <View
            accessible={true}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 14,
                "left": 14,
                "right": 14,
                "top": 14,
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              pointerEvents="none"
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight={9}
                bbWidth={12}
                focusable={false}
                height={9}
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "flex": 0,
                      "height": 9,
                      "width": 12,
                    },
                  ]
                }
                vbHeight={9}
                vbWidth={12}
                width={12}
                x={0}
                y={0}
              >
                <RNSVGGroup>
                  <RNSVGGroup
                    fill={null}
                    fillRule={0}
                    name="Page-1"
                    propList={
                      Array [
                        "fill",
                        "fillRule",
                        "stroke",
                        "strokeWidth",
                      ]
                    }
                    stroke={null}
                    strokeWidth="1"
                  >
                    <RNSVGPath
                      d="M5.625 9 11.25 0 0 0z"
                      fill={4286715730}
                      name="down"
                      propList={
                        Array [
                          "fill",
                        ]
                      }
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "width": "100%",
        }
      }
    >
      <Text
        style={
          Object {
            "fontSize": 15,
            "margin": 0,
            "paddingLeft": 20,
            "textAlign": "left",
            "width": "100%",
          }
        }
      >
        Tags:
      </Text>
      <View
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "width": "95%",
          }
        }
      >
        <View
          style={
            Object {
              "paddingHorizontal": 10,
              "width": "100%",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "black",
                "fontSize": 12,
                "marginBottom": -4,
                "marginTop": 12,
                "paddingBottom": 10,
              }
            }
          >
            Press space to add a tag
          </Text>
          <View
            style={
              Object {
                "backgroundColor": "#f2f2f2",
                "flexDirection": "row",
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              autoCorrect={false}
              editable={true}
              inputContainerStyle={
                Object {
                  "backgroundColor": "#f2f2f2",
                }
              }
              label="Press space to add a tag"
              labelStyle={
                Object {
                  "color": "black",
                  "paddingBottom": 10,
                }
              }
              onChangeText={[Function]}
              onEndEditing={[Function]}
              rejectResponderTermination={true}
              style={
                Object {
                  "color": "black",
                  "flex": 1,
                  "fontSize": 18,
                  "marginLeft": 5,
                  "marginRight": 5,
                  "minHeight": 40,
                }
              }
              tagStyle={
                Object {
                  "backgroundColor": "white",
                }
              }
              tags={
                Object {
                  "tag": "",
                  "tagsArray": Array [],
                }
              }
              underlineColorAndroid="transparent"
              updateState={[Function]}
              value=""
            />
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
                "flexWrap": "wrap",
                "justifyContent": "flex-start",
                "marginTop": 10,
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "black",
          "margin": 5,
          "width": 200,
        }
      }
    >
      <View
        accessibilityLabel="Create Challenge button"
        accessibilityRole="button"
        accessibilityState={Object {}}
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
                Object {
                  "color": "white",
                },
              ]
            }
          >
            Create Challenge
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "black",
          "margin": 5,
          "width": 200,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityState={Object {}}
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
                Object {
                  "color": "white",
                },
              ]
            }
          >
            Go Back
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;
